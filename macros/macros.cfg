[gcode_macro START_PRINT]
variable_parameter_EXTRUDER_TEMP: 200
variable_parameter_BED_TEMP: 0
; gcode parameters for area bed mesh
variable_parameter_AREA_START : 30,30
variable_parameter_AREA_END : 290,290
variable_parameter_FILAMENT_TYPE : "PLA"
gcode:
    CLEAR_PAUSE
    G92 E0; Reset Extruder


    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={params.EXTRUDER_TEMP|default(200)|float}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.BED_TEMP|default(0)|float}

    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.BED_TEMP|default(60)|float - 5} MAXIMUM={params.BED_TEMP|default(60)|float + 5}


    BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("40,40")} AREA_END={params.AREA_END|default("300,300")}

    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.EXTRUDER_TEMP|default(200)|float - 5} MAXIMUM={params.EXTRUDER_TEMP|default(200)|float + 5}

    G91
    ;G1 Z5.0 F3000; Move Z Axis up little to prevent scratching of Heat Bed
    ;G90
    ;G1 X10 Y20 Z5.0 F5000.0
    ;G1 X10 Y20 Z0.3 F5000.0; Move to start position
    ;G1 X10 Y200.0 Z0.3 F1500.0 E15; Draw the first line
    ;G1 X10.3 Y200.0 Z0.3 F5000.0; Move to side a little
    ;G1 X10.3 Y20 Z0.3 F1500.0 E30; Draw the second line
    G92 E0; Reset Extruder
    G1 Z5.0 F3000; Move Z Axis up little to prevent scratching of Heat Bed

[gcode_macro START_PRINT_RECOVERY]
variable_parameter_EXTRUDER_TEMP: 190
variable_parameter_BED_TEMP: 60
variable_parameter_FILAMENT_TYPE : "PLA"
gcode:
    CLEAR_PAUSE
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={params.EXTRUDER_TEMP|default(200)|float}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.BED_TEMP|default(60)|float}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.BED_TEMP|default(60)|float - 5} MAXIMUM={params.BED_TEMP|default(60)|float + 5}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.EXTRUDER_TEMP|default(200)|float - 5} MAXIMUM={params.EXTRUDER_TEMP|default(200)|float + 5}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set X = params.X|default(5)|float %}
    {% set Y = params.Y|default(5)|float %}
    {% set Z = params.Z|default(10)|float %}
    {% set E = params.E|default(0.5)|float %}
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = params.E|default(0.5)|float %}
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    END_PRINT
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro END_PRINT]
gcode:
    TURN_OFF_HEATERS
    M106 S0 ; turn off fan
    G91; relative positioning
    G1 Z1.0 F3000 ; move z up little to prevent scratching of print
    G90; absolute positioning
    G1 X0 Y300 F3000 ; prepare for part removal
    M84 ; disable motors
    M18

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 4
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
; enable preference index
variable_enable_reference_index : False
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            {% set algorithm = "bicubic" %}
	    {% if "algorithm" in bedMeshConfig %}
	        {% set algorithm = bedMeshConfig.algorithm %}
            {% endif %}
            {% if meshPointX >=7 or meshPointY >=7 %}
                {% set algorithm = "bicubic" %}
            {% endif %}

            {% if enable_reference_index %}
                {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
            {% else %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
            {% endif %}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}
